{"mappings":"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","sources":["movie.js"],"sourcesContent":["// Constants and Configuration\nconst CONFIG = {\n    API_BASE_URL: 'https://api.tvmaze.com/search/shows',\n    CAROUSEL_LIMIT: 5,\n    FAVORITES_LIMIT: 4,\n    NOTIFICATION_DURATION: 3000,\n    IMAGE_LAZY_LOADING: true,\n    STORAGE_KEYS: {\n        WATCHLIST: 'reelrate_watchlist',\n        FAVORITES: 'reelrate_favorites',\n        REVIEWS: 'reelrate_reviews',\n        MOVIE_LIST: 'reelrate_movie_list'\n    },\n       MAX_RATING: 5\n};\n\n// Utility Functions\nconst debounce = (func, wait) => {\n    let timeout;\n    return function executedFunction(...args) {\n        const later = () => {\n            clearTimeout(timeout);\n            func(...args);\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    };\n};\n\nconst sanitizeString = (str) => {\n    const div = document.createElement('div');\n    div.textContent = str;\n    return div.innerHTML.replace(/\"/g, '&quot;');\n};\n\nclass MovieListManager {\n    constructor() {\n        this.movieListingsContainer = document.getElementById('movieListings');\n        this.movies = this.loadMovies();\n    }\n\n    loadMovies() {\n        try {\n            const movies = localStorage.getItem(CONFIG.STORAGE_KEYS.MOVIE_LIST);\n            return movies ? JSON.parse(movies) : [];\n        } catch (error) {\n            console.error('Error loading movies:', error);\n            return [];\n        }\n    }\n\n    saveMovies() {\n        try {\n            localStorage.setItem(CONFIG.STORAGE_KEYS.MOVIE_LIST, JSON.stringify(this.movies));\n        } catch (error) {\n            console.error('Error saving movies:', error);\n        }\n    }\n\n    updateMovieList(shows) {\n        if (!shows || !Array.isArray(shows)) return;\n\n        this.movies = shows.map(show => ({\n            id: show.show.id,\n            name: show.show.name,\n            image: show.show.image?.original || null,\n            rating: show.show.rating?.average || 'N/A'\n        }));\n\n        this.saveMovies();\n        this.display();\n    }\n\n    display() {\n        if (!this.movieListingsContainer) {\n            console.error('Movie listings container not found');\n            return;\n        }\n\n        this.movieListingsContainer.innerHTML = '';\n\n        if (!this.movies.length) {\n            this.movieListingsContainer.innerHTML = '<p class=\"text-center text-light\">No results found.</p>';\n            return;\n        }\n\n        const grid = document.createElement('div');\n        grid.className = 'movie-listings-grid';\n\n        this.movies.forEach(movie => {\n            const card = this.createMovieCard(movie);\n            grid.appendChild(card);\n        });\n\n        this.movieListingsContainer.appendChild(grid);\n    }\n\n    createMovieCard(movie) {\n        const card = document.createElement('div');\n        card.className = 'movie-card';\n\n        card.innerHTML = `\n            <div class=\"movie-card-inner\">\n                <img src=\"${movie.image || 'https://via.placeholder.com/300x450?text=No+Image'}\" \n                     alt=\"${sanitizeString(movie.name)}\" \n                     class=\"movie-image\"\n                     loading=\"lazy\" \n                     onerror=\"this.src='https://via.placeholder.com/300x450?text=No+Image'\">\n                <div class=\"movie-info\">\n                    <h3 class=\"movie-title\">${sanitizeString(movie.name)}</h3>\n                    <p class=\"movie-rating\">Rating: ${movie.rating}</p>\n                    <button class=\"btn btn-info review-btn\" \n                            data-movie-id=\"${movie.id}\"\n                            data-movie-name=\"${sanitizeString(movie.name)}\"\n                            aria-label=\"Review ${sanitizeString(movie.name)}\">\n                        <i class=\"fas fa-star me-2\"></i>Review\n                    </button>\n                </div>\n            </div>\n        `;\n\n        // Add event listener for review button\n        const reviewBtn = card.querySelector('.review-btn');\n        reviewBtn.addEventListener('click', () => {\n            const reviewForm = document.querySelector('.review-form');\n            if (reviewForm) {\n                reviewForm.dataset.movieId = movie.id;\n                reviewForm.dataset.movieName = movie.name;\n                // Scroll to review form\n                reviewForm.scrollIntoView({ behavior: 'smooth' });\n            }\n        });\n\n        return card;\n    }\n} \n// New Review Manager Class\nclass ReviewManager {\n    constructor() {\n        this.reviews = this.loadReviews();\n        this.reviewForm = document.querySelector('.review-form');\n        this.reviewsDisplay = document.getElementById('reviews-display');\n        this.setupEventListeners();\n    }\n\n    loadReviews() {\n        try {\n            const reviews = localStorage.getItem(CONFIG.STORAGE_KEYS.REVIEWS);\n            return reviews ? JSON.parse(reviews) : {};\n        } catch (error) {\n            console.error('Error loading reviews:', error);\n            return {};\n        }\n    }\n\n    setupEventListeners() {\n        if (!this.reviewForm) return;\n\n        this.reviewForm.addEventListener('submit', (e) => {\n            e.preventDefault();\n            const reviewText = document.getElementById('review-text').value;\n            const rating = document.getElementById('rating').value;\n            const movieId = this.reviewForm.dataset.movieId;\n            const movieName = this.reviewForm.dataset.movieName;\n\n            if (movieId && movieName) {\n                this.addReview(movieId, movieName, reviewText, rating);\n            } else {\n                app.notificationManager.show('Please select a movie to review', 'error');\n            }\n        });\n    }\n\n    addReview(movieId, movieName, reviewText, rating) {\n        if (!movieId || !reviewText || !rating) return;\n\n        const review = {\n            movieId,\n            movieName,\n            reviewText,\n            rating: Number(rating),\n            date: new Date().toISOString()\n        };\n\n        if (!this.reviews[movieId]) {\n            this.reviews[movieId] = [];\n        }\n        this.reviews[movieId].push(review);\n        this.saveReviews();\n        this.displayReviews();\n        this.resetForm();\n        app.notificationManager.show('Review added successfully', 'success');\n    }\n\n    saveReviews() {\n        try {\n            localStorage.setItem(CONFIG.STORAGE_KEYS.REVIEWS, JSON.stringify(this.reviews));\n        } catch (error) {\n            console.error('Error saving reviews:', error);\n        }\n    }\n\n    displayReviews() {\n        if (!this.reviewsDisplay) return;\n\n        this.reviewsDisplay.innerHTML = '';\n        let hasReviews = false;\n\n        Object.values(this.reviews).flat().sort((a, b) => {\n            return new Date(b.date) - new Date(a.date);\n        }).forEach(review => {\n            hasReviews = true;\n            const reviewElement = this.createReviewElement(review);\n            this.reviewsDisplay.appendChild(reviewElement);\n        });\n\n        if (!hasReviews) {\n            this.reviewsDisplay.innerHTML = '<p class=\"text-center\">No reviews yet. Watch some movies and share your thoughts!</p>';\n        }\n    }\n\n    createReviewElement(review) {\n        const reviewDiv = document.createElement('div');\n        reviewDiv.className = 'review-item mb-3 p-3 bg-white rounded shadow-sm';\n        \n        const stars = '★'.repeat(review.rating) + '☆'.repeat(CONFIG.MAX_RATING - review.rating);\n        const date = new Date(review.date).toLocaleDateString();\n\n        reviewDiv.innerHTML = `\n            <div class=\"d-flex justify-content-between align-items-center mb-2\">\n                <h4 class=\"movie-title h5 mb-0\">${sanitizeString(review.movieName)}</h4>\n                <span class=\"text-warning\">${stars}</span>\n            </div>\n            <p class=\"review-text mb-2\">${sanitizeString(review.reviewText)}</p>\n            <div class=\"text-muted small\">\n                <em>Reviewed on ${date}</em>\n                <button class=\"btn btn-sm btn-outline-danger float-end delete-review\" \n                        data-movie-id=\"${review.movieId}\">\n                    <i class=\"fas fa-trash-alt\"></i> Delete\n                </button>\n            </div>\n        `;\n\n        reviewDiv.querySelector('.delete-review').addEventListener('click', () => {\n            this.deleteReview(review.movieId, review.date);\n        });\n\n        return reviewDiv;\n    }\n\n    deleteReview(movieId, date) {\n        if (this.reviews[movieId]) {\n            this.reviews[movieId] = this.reviews[movieId].filter(r => r.date !== date);\n            if (this.reviews[movieId].length === 0) {\n                delete this.reviews[movieId];\n            }\n            this.saveReviews();\n            this.displayReviews();\n            app.notificationManager.show('Review deleted', 'success');\n        }\n    }\n\n    resetForm() {\n        if (this.reviewForm) {\n            this.reviewForm.reset();\n            delete this.reviewForm.dataset.movieId;\n            delete this.reviewForm.dataset.movieName;\n        }\n    }\n\n    getMovieRating(movieId) {\n        if (!this.reviews[movieId]) return null;\n        const ratings = this.reviews[movieId].map(r => r.rating);\n        const average = ratings.reduce((a, b) => a + b, 0) / ratings.length;\n        return average.toFixed(1);\n    }\n\n    hasReviewedMovie(movieId) {\n        return !!this.reviews[movieId]?.length;\n    }\n}\n// Main App Class\nclass MovieApp {\n    constructor() {\n        this.initializeElements();\n        this.reviewManager = new ReviewManager(); // Initialize reviewManager first\n         this.movieListManager = new MovieListManager();\n        this.initializeEventListeners();\n        this.watchlistManager = new StorageManager(CONFIG.STORAGE_KEYS.WATCHLIST);\n        this.favoritesManager = new StorageManager(CONFIG.STORAGE_KEYS.FAVORITES);\n        this.carouselManager = new CarouselManager(this.reviewManager); // Pass reviewManager\n        this.notificationManager = new NotificationManager();\n    }\n\n    initializeElements() {\n        this.form = document.querySelector('.search-form');\n        this.gallery = document.querySelector('.image-container');\n        this.searchInput = this.form?.querySelector('input[type=\"search\"]');\n        this.loadingIndicator = document.querySelector('.loading');\n        this.movieListingsContainer = document.getElementById('movieListings');\n\n        if (!this.form || !this.gallery || !this.searchInput) {\n            throw new Error('Required elements not found');\n        }\n    }\n\n    initializeEventListeners() {\n        this.form.addEventListener('submit', this.handleSearch.bind(this));\n        \n        this.searchInput.addEventListener('input', debounce((e) => {\n            const isValid = e.target.checkValidity();\n            e.target.setAttribute('aria-invalid', !isValid);\n        }, 300));\n\n        window.addEventListener('DOMContentLoaded', () => {\n            this.watchlistManager.display();\n            this.favoritesManager.display();\n        });\n\n        window.addEventListener('online', () => {\n            this.notificationManager.show('Connection restored', 'success');\n        });\n        \n        window.addEventListener('offline', () => {\n            this.notificationManager.show('No internet connection', 'error');\n        });\n    }\n\n    async handleSearch(e) {\n        e.preventDefault();\n        const query = sanitizeString(this.searchInput.value.trim());\n        \n        if (!query) {\n            this.notificationManager.show('Please enter a search term', 'error');\n            return;\n        }\n\n        this.setLoading(true);\n\n        try {\n            const shows = await this.fetchShows(query);\n            await this.carouselManager.updateCarousel(shows, {\n                watchlistManager: this.watchlistManager,\n                favoritesManager: this.favoritesManager\n            });\n            this.movieListManager.updateMovieList(shows);\n            this.searchInput.value = '';\n        } catch (error) {\n            this.notificationManager.show(error.message, 'error');\n            console.error('Search error:', error);\n        } finally {\n            this.setLoading(false);\n        }\n    }\n\n    setLoading(isLoading) {\n        if (this.loadingIndicator) {\n            this.loadingIndicator.style.display = isLoading ? 'flex' : 'none';\n            this.loadingIndicator.setAttribute('aria-busy', isLoading);\n        }\n    }\n\n    async fetchShows(query) {\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), 5000);\n\n        try {\n            const response = await fetch(\n                `${CONFIG.API_BASE_URL}?q=${encodeURIComponent(query)}`,\n                { signal: controller.signal }\n            );\n\n            clearTimeout(timeoutId);\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            return await response.json();\n        } catch (error) {\n            if (error.name === 'AbortError') {\n                throw new Error('Request timed out');\n            }\n            throw new Error(`Failed to fetch shows: ${error.message}`);\n        }\n    }\n}\n\n// Notification Manager Class\nclass NotificationManager {\n    constructor() {\n        this.container = document.createElement('div');\n        this.container.className = 'notification-container';\n        this.container.setAttribute('role', 'alert');\n        this.container.setAttribute('aria-live', 'polite');\n        document.body.appendChild(this.container);\n    }\n\n    show(message, type = 'info') {\n        const notification = document.createElement('div');\n        notification.className = `notification notification-${type}`;\n        notification.textContent = message;\n        \n        this.container.appendChild(notification);\n        \n        setTimeout(() => {\n            notification.classList.add('fade-out');\n            setTimeout(() => notification.remove(), 300);\n        }, CONFIG.NOTIFICATION_DURATION);\n    }\n}\n\n// Carousel Manager Class\nclass CarouselManager {\n    constructor(reviewManager) {  // Add reviewManager parameter\n        this.carouselInner = document.querySelector('#topRatedCarousel .carousel-inner');\n        this.initializeIntersectionObserver();\n        this.notificationManager = new NotificationManager();\n        this.reviewManager = reviewManager; \n    }  \n\n    initializeIntersectionObserver() {\n        this.observer = new IntersectionObserver(\n            (entries) => {\n                entries.forEach(entry => {\n                    if (entry.isIntersecting) {\n                        const img = entry.target;\n                        if (img.dataset.src) {\n                            img.src = img.dataset.src;\n                            img.removeAttribute('data-src');\n                            this.observer.unobserve(img);\n                        }\n                    }\n                });\n            },\n            { threshold: 0.1 }\n        );\n    }\n\n    async updateCarousel(shows, { watchlistManager, favoritesManager }) {\n        if (!this.carouselInner) return;\n\n        this.carouselInner.innerHTML = '';\n        \n        const validShows = shows\n            .filter(show => show.show.image?.original)\n            .slice(0, CONFIG.CAROUSEL_LIMIT);\n\n        validShows.forEach((show, index) => {\n            this.createCarouselItem(show, index === 0, watchlistManager, favoritesManager);\n        });\n    }\n\n    createCarouselItem(show, isActive, watchlistManager, favoritesManager) {\n        const { id, name, image, rating } = show.show;\n        \n        if (!name || !image?.original) {\n            console.error('Invalid show data:', show);\n            return;\n        }\n\n        const sanitizedName = sanitizeString(name);\n        const sanitizedImage = sanitizeString(image.original);\n        // Use this.reviewManager instead of app.reviewManager\n        const userRating = this.reviewManager.getMovieRating(id);\n        const hasReview = this.reviewManager.hasReviewedMovie(id);\n\n        const carouselItem = document.createElement('div');\n        carouselItem.classList.add('carousel-item');\n        if (isActive) carouselItem.classList.add('active');\n\n        carouselItem.innerHTML = `\n            <img data-src=\"${sanitizedImage}\" \n                 class=\"d-block w-100 carousel-image\" \n                 alt=\"${sanitizedName}\"\n                 src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1 1'%3E%3C/svg%3E\"\n                 onerror=\"this.src='https://via.placeholder.com/1200x675?text=No+Image'\">\n            <div class=\"carousel-caption d-none d-md-block\">\n                <h5>${sanitizedName}</h5>\n                <p>TVDB Rating: ${rating?.average || 'N/A'}</p>\n                ${userRating ? `<p class=\"user-rating\">Your Rating: ${userRating} ★</p>` : ''}\n                <div class=\"button-group\">\n                    <button class=\"btn btn-primary watchlist-btn\" aria-label=\"Add ${sanitizedName} to Watchlist\">\n                        <i class=\"fas fa-list me-2\" aria-hidden=\"true\"></i>Add to Watchlist\n                    </button>\n                    <button class=\"btn btn-success favorite-btn\" aria-label=\"Add ${sanitizedName} to Favorites\">\n                        <i class=\"fas fa-heart me-2\" aria-hidden=\"true\"></i>Add to Favorites\n                    </button>\n                    <button class=\"btn btn-info review-btn\" \n                            aria-label=\"${hasReview ? 'Update' : 'Add'} review for ${sanitizedName}\">\n                        <i class=\"fas fa-star me-2\" aria-hidden=\"true\"></i>\n                        ${hasReview ? 'Update Review' : 'Add Review'}\n                    </button>\n                </div>\n            </div>\n        `;\n\n        const watchlistBtn = carouselItem.querySelector('.watchlist-btn');\n        const favoriteBtn = carouselItem.querySelector('.favorite-btn');\n        const reviewBtn = carouselItem.querySelector('.review-btn');\n\n        watchlistBtn.addEventListener('click', () => {\n            watchlistManager.add(name, image.original);\n            this.notificationManager.show('Added to watchlist', 'success');\n        });\n\n        favoriteBtn.addEventListener('click', () => {\n            favoritesManager.add(name, image.original);\n            this.notificationManager.show('Added to favorites', 'success');\n        });\n\n        reviewBtn.addEventListener('click', () => {\n            const reviewForm = document.querySelector('.review-form');\n            if (reviewForm) {\n                reviewForm.dataset.movieId = id;\n                reviewForm.dataset.movieName = name;\n            }\n        });\n\n        const img = carouselItem.querySelector('img');\n        if (CONFIG.IMAGE_LAZY_LOADING && this.observer) {\n            this.observer.observe(img);\n        }\n\n        this.carouselInner.appendChild(carouselItem);\n    }\n}\n\n// Storage Manager Class\nclass StorageManager {\n    constructor(storageKey) {\n        this.storageKey = storageKey;\n        this.items = this.loadFromStorage();\n        this.displayElement = document.getElementById(`${storageKey}-movies`);\n        // Add event delegation for remove buttons\n        this.displayElement?.addEventListener('click', (e) => {\n            if (e.target.closest('.remove-btn')) {\n                const name = e.target.closest('.remove-btn').dataset.name;\n                this.remove(name);\n            }\n        });\n    }\n\n    loadFromStorage() {\n        try {\n            const data = localStorage.getItem(this.storageKey);\n            return data ? JSON.parse(data) : [];\n        } catch (error) {\n            console.error(`Error loading ${this.storageKey}:`, error);\n            return [];\n        }\n    }\n\n    add(name, image) {\n        if (!name || !image) {\n            console.error('Invalid movie data:', { name, image });\n            return;\n        }\n\n        if (!this.items.some(item => item.name === name)) {\n            if (this.storageKey === CONFIG.STORAGE_KEYS.FAVORITES && \n                this.items.length >= CONFIG.FAVORITES_LIMIT) {\n                this.items.shift();\n            }\n            this.items.push({ name, image });\n            this.saveToStorage();\n            this.display();\n        }\n    }\n\n    remove(name) {\n        if (!name) return;\n        \n        console.log(`Removing ${name} from ${this.storageKey}`); // Debug log\n        this.items = this.items.filter(item => item.name !== name);\n        this.saveToStorage();\n        this.display();\n    }\n\n    saveToStorage() {\n        try {\n            localStorage.setItem(this.storageKey, JSON.stringify(this.items));\n            console.log(`Saved ${this.storageKey}:`, this.items); // Debug log\n        } catch (error) {\n            console.error(`Error saving ${this.storageKey}:`, error);\n        }\n    }\n\n    display() {\n        if (!this.displayElement) {\n            console.error(`Display element for ${this.storageKey} not found`);\n            return;\n        }\n\n        if (!this.items.length) {\n            this.displayElement.innerHTML = `\n                <p class=\"text-center\">No items in your ${this.storageKey}.</p>\n            `;\n            return;\n        }\n\n        this.displayGrid();\n    }\n\n    displayGrid() {\n        this.displayElement.innerHTML = '';\n        const container = document.createElement('div');\n        container.classList.add(`${this.storageKey}-grid`);\n\n        const itemsToDisplay = this.storageKey === CONFIG.STORAGE_KEYS.FAVORITES\n            ? this.items.slice(-CONFIG.FAVORITES_LIMIT)\n            : this.items;\n\n        itemsToDisplay.forEach((item, index) => {\n            if (item && item.name && item.image) { // Only create cards for valid items\n                const card = this.createMovieCard(item, index);\n                container.appendChild(card);\n            }\n        });\n\n        this.displayElement.appendChild(container);\n    }\n\n    createMovieCard(item, index) {\n        const sanitizedName = sanitizeString(item.name);\n        const sanitizedImage = sanitizeString(item.image);\n\n        const card = document.createElement('div');\n        card.classList.add('movie-card');\n        card.innerHTML = `\n            <div class=\"movie-card-inner\">\n                <img src=\"${sanitizedImage}\" \n                     alt=\"${sanitizedName}\" \n                     class=\"movie-image\"\n                     loading=\"lazy\"\n                     onerror=\"this.src='https://via.placeholder.com/300x450?text=No+Image'\">\n                <div class=\"movie-info\">\n                    <h3 class=\"movie-title\">${sanitizedName}</h3>\n                    <button class=\"btn btn-danger remove-btn\" \n                            data-name=\"${sanitizedName}\"\n                            aria-label=\"Remove ${sanitizedName}\">\n                        <i class=\"fas fa-trash-alt me-2\" aria-hidden=\"true\"></i>Remove\n                    </button>\n                </div>\n            </div>\n        `;\n\n        return card;\n    }\n\n    clear() {\n        this.items = [];\n        this.saveToStorage();\n        this.display();\n    }\n}\n\n// Initialize the app\ntry {\n    window.app = new MovieApp();\n} catch (error) {\n    console.error('Failed to initialize application:', error);\n    const errorMessage = document.createElement('div');\n    errorMessage.className = 'alert alert-danger m-3';\n    errorMessage.setAttribute('role', 'alert');\n    errorMessage.textContent = 'Failed to initialize application. Please refresh the page.';\n    document.body.prepend(errorMessage);\n}\n\n// Debug function to clear storage\nwindow.clearStorage = () => {\n    app.watchlistManager.clear();\n    app.favoritesManager.clear();\n    // Add this line to clear reviews too\n    localStorage.removeItem(CONFIG.STORAGE_KEYS.REVIEWS);\n    console.log('Storage cleared');\n};"],"names":[],"version":3,"file":"index.18dd1764.js.map","sourceRoot":"/__parcel_source_root/"}